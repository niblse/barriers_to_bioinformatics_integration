panel.grid.minor = element_blank(),
# unfortunately, can't mimic subtitles
plot.title = element_text(hjust = 0, size = rel(1.5), face = "bold"),
plot.margin = unit(c(1, 1, 1, 1), "lines"),
strip.background = element_rect())+
theme(plot.background = element_rect(fill = "white"))+
theme(panel.background = element_rect(fill = "white"))+
theme(panel.grid.major.y = element_blank())+
theme(axis.line = element_line(colour = "black"))+
coord_flip()+
scale_fill_manual(values = greys, name= "Institution Types", labels= legend.labels$legend)+
guides(fill=guide_legend(nrow =2, reverse = TRUE))+
theme(panel.grid.minor=element_blank())
proportional.sig.responses.summed.by.barriers.plot.filename <- paste("barriers_differing_significantly_by_category_proprotional_by_category",
question.column.name.short,
"by",
category.column.name.short,
"_bw.png",
sep = "_")
ggsave("figure_03_bw.png",
width = 13.8,
units = "in")
}
# plot significantly different responses
plot.sig.barriers(proportion_table_summary,
category.df,
category.levels,
category.nice.name.caps,
category.nice.name.lower,
n.respondents,
question.column.name.safe,
category.column.name.safe)
############ Plot significantly different barriers ####################################
plot.sig.barriers <- function(df,
category.df,
category.levels,
category.nice.name.caps,
category.nice.name.lower,
n.respondents,
question.column.name.safe,
category.column.name.safe){
#significant barriers
sig.barriers <- df%>%
filter(prop_test_chi_pvalue <= 0.05)
sigs <- as.character(sig.barriers$Var2)
sigs <- c(sigs)
#plot significant barriers
#reformat Var2 names as chr
df$Var2 <- as.character(df$Var2)
proportional.sig.responses.summed.by.barriers.plot <-df%>%
filter(Var2 %in% sigs)
#setup plot ordering
proportional.sig.responses.summed.by.barriers.plot <- proportional.sig.responses.summed.by.barriers.plot
proportional.sig.responses.summed.by.barriers.plot$Var2 <-
factor(proportional.sig.responses.summed.by.barriers.plot$Var2, levels =
proportional.sig.responses.summed.by.barriers.plot$Var2[order(proportional.sig.responses.summed.by.barriers.plot$summed_score)])
#plot
# create legend lables that show the value of n for a stratfying category
legend.labels <- df%>%
ungroup()%>%
select(nice_names, responses)%>%
head(., n = length(category.levels))%>%
mutate(legend = paste(nice_names, " (","n=", responses,")", sep = ""))
#correct nice_names for plotting
#SUBSTITUTION
#replace underscores with spaces
legend.labels$legend <- gsub("_",
" ",
legend.labels$legend)
#replace 'X' with ','
legend.labels$legend <- gsub("X",
",",
legend.labels$legend)
#replace 'K' with ""
legend.labels$legend <- gsub("K",
"",
legend.labels$legend)
#replace 'Q' with ''
legend.labels$legend <- gsub("Q",
"'",
legend.labels$legend)
# create labels that show how many positive (coded) responses
x.labels <- proportional.sig.responses.summed.by.barriers.plot%>%
arrange(desc(summed_score))%>%
select(Var2, summed_score)%>%
distinct(Var2, .keep_all = TRUE)%>%
mutate(x.labels = paste(Var2, " \n(", "N(cr+)=", summed_score, ")", sep = ""))
# get values of error bars
error.limits <- aes(ymax = proportional.sig.responses.summed.by.barriers.plot$ymax, ymin = proportional.sig.responses.summed.by.barriers.plot$ymin)
error.dodge <- position_dodge(width=0.9)
niblse_4_color <- c("#0C774C",
"#124671",
"#AF6D12",
"#AF4112")
proportional.sig.responses.summed.by.barriers.plot <- proportional.sig.responses.summed.by.barriers.plot%>%
mutate(proportion = proportion * 100)
proportional.sig.responses.summed.by.barriers.plot%>%
ggplot()+
aes(x=Var2, y=proportion, fill=Var1)+
geom_bar(stat = "identity", position = "dodge")+
labs(y = "percentage of respondents", x= "")+
theme(axis.text.x=element_text(angle=-20, hjust = 0, vjust = 1))+
scale_x_discrete(
labels = c(
'Curriculum Issues:\nQuickly changing technologies',
'Student Issues:\nLack of interest',
'Student Issues:\nLack of background skills/knowledge',
'Faculty Issues:\nLack of expertise/training'))+
#scale_x_discrete(labels = x.labels$x.labels)+
geom_errorbar(error.limits, position = error.dodge, width = .2)+
theme_gray(base_size = 20, base_family = "sans")+
theme(line = element_line(colour = "black"), rect = element_rect(fill = "white",linetype = 0, colour = NA))+
theme(legend.background = element_rect(), legend.position = "bottom", legend.direction = "horizontal", legend.box = "vertical")+
theme(panel.grid.major =
element_line(colour = "grey"),
panel.grid.minor = element_blank(),
# unfortunately, can't mimic subtitles
plot.title = element_text(hjust = 0, size = rel(1.5), face = "bold"),
plot.margin = unit(c(1, 1, 1, 1), "lines"),
strip.background = element_rect())+
theme(plot.background = element_rect(fill = "white"))+
theme(panel.background = element_rect(fill = "white"))+
theme(panel.grid.major.y = element_blank())+
theme(axis.line = element_line(colour = "black"))+
coord_flip()+
scale_fill_manual(values = niblse_4_color, name= "Institution Types", labels= legend.labels$legend)+
guides(fill=guide_legend(nrow =2, reverse = TRUE))+
theme(panel.grid.minor=element_blank())
proportional.sig.responses.summed.by.barriers.plot.filename <- paste("barriers_differing_significantly_by_category_proprotional_by_category",
question.column.name.short,
"by",
category.column.name.short,
"_niblse_4color.png",
sep = "_")
ggsave("figure_03_color.png",
width = 13.8,
units = "in")
}
# plot significantly different responses
plot.sig.barriers(proportion_table_summary,
category.df,
category.levels,
category.nice.name.caps,
category.nice.name.lower,
n.respondents,
question.column.name.safe,
category.column.name.safe)
View(relavant.respondents.df)
View(raw.scored.analysis.tallied.df)
View(response.counts.by.category)
View(response.counts.by.category)
setwd("~/github/niblse/publication_figures_and_tables/first_submission_draft_2017-XX-XX/figure_01_demographics")
# Create demographics tables / charts?
require(ggplot2)
require(stargazer)
require(tidyverse)
require(ggthemes)
require(gdata)
require(stargazer)
#load unformatted demographics table
data.df <- read_csv("../../../analysis_scripts/summarize_and_plot_demographic_information/output_tables/summary_demographics_w_NAs.csv")
# Create dataframe of desired demographics
table_sex <- data.frame("Demographic_category"=c("Female",
"Male",
"Unknown Sex"),
"Demographic"=c("Sex",
"Sex",
"Sex"),
"N"=c(as.numeric(data.df[47,3]),
as.numeric(data.df[48,3]),
as.numeric(data.df[49,3])
),
"Percentage"=c(as.numeric(data.df[47,5]),
as.numeric(data.df[48,5]),
as.numeric(data.df[49,5])
),
stringsAsFactors = FALSE
)
table_ethnicity <-  data.frame("Demographic_category"=c("Am. Indian/Alaskan Native",
"Asian",
"Black/African Am.",
"Hispanic",
"Hawaiian/Pacific Islander",
"White",
"Unknown Race/Ethnicity"),
"Demographic"=c("Race/Ethnicity",
"Race/Ethnicity",
"Race/Ethnicity",
"Race/Ethnicity",
"Race/Ethnicity",
"Race/Ethnicity",
"Race/Ethnicity"
),
"N"=c(as.numeric(data.df[17,3]),
as.numeric(data.df[18,3]),
as.numeric(data.df[19,3]),
as.numeric(data.df[20,3]),
as.numeric(data.df[21,3]),
as.numeric(data.df[22,3]),
as.numeric(data.df[23,3])
),
"Percentage"=c(as.numeric(data.df[17,5]),
as.numeric(data.df[18,5]),
as.numeric(data.df[19,5]),
as.numeric(data.df[20,5]),
as.numeric(data.df[21,5]),
as.numeric(data.df[22,5]),
as.numeric(data.df[23,5])
),
stringsAsFactors = FALSE
)
table_degree <- data.frame("Demographic_category"=c("Bachelor's",
"Master's",
"Doctoral",
"Professional",
"Other",
"Unknown Degree"
),
"Demographic"=c("Terminal Degree",
"Terminal Degree",
"Terminal Degree",
"Terminal Degree",
"Terminal Degree",
"Terminal Degree"
),
"N"=c(as.numeric(data.df[24,3]),
as.numeric(data.df[25,3]),
as.numeric(data.df[27,3]),
as.numeric(data.df[28,3]),
as.numeric(data.df[26,3]),
as.numeric(data.df[29,3])
),
"Percentage"=c(as.numeric(data.df[24,5]),
as.numeric(data.df[25,5]),
as.numeric(data.df[27,5]),
as.numeric(data.df[28,5]),
as.numeric(data.df[26,5]),
as.numeric(data.df[29,5])
),
stringsAsFactors = FALSE
)
table_carnegie <- data.frame("Demographic_category"=c("Associate's ",
"Baccalaureate ",
"Master's ",
"Doctoral ",
"Unknown Classification "
),
"Demographic"= c("Carnegie Classification",
"Carnegie Classification",
"Carnegie Classification",
"Carnegie Classification",
"Carnegie Classification"
),
"N"=c(as.numeric(data.df[1,3]),
as.numeric(data.df[2,3]),
as.numeric(data.df[4,3]),
as.numeric(data.df[3,3]),
as.numeric(data.df[5,3])
),
"Percentage"=c(as.numeric(data.df[1,5]),
as.numeric(data.df[2,5]),
as.numeric(data.df[4,5]),
as.numeric(data.df[3,5]),
as.numeric(data.df[5,5])
),
stringsAsFactors = FALSE
)
table_msi <- data.frame("Demographic_category"=c("Minority-Serving",
"Nonâ€”minority-Serving",
"Unknown MSI Designation"
),
"Demographic"= c("MSI Designation",
"MSI Designation",
"MSI Designation"
),
"N"=c(as.numeric(data.df[44,3]),
as.numeric(data.df[45,3]),
as.numeric(data.df[46,3])
),
"Percentage"=c(as.numeric(data.df[44,5]),
as.numeric(data.df[45,5]),
as.numeric(data.df[46,5])
),
stringsAsFactors = FALSE
)
table_enrollment <- data.frame("Demographic_category"=c("< 5,000",
"5-15,000",
"> 15,000",
"Unknown Enrollment"
),
"Demographic"= c("Undergraduate Enrollment",
"Undergraduate Enrollment",
"Undergraduate Enrollment",
"Undergraduate Enrollment"
),
"N"=c(as.numeric(data.df[50,3]),
as.numeric(data.df[51,3]),
as.numeric(data.df[52,3]),
as.numeric(data.df[53,3])
),
"Percentage"=c(as.numeric(data.df[50,5]),
as.numeric(data.df[51,5]),
as.numeric(data.df[52,5]),
as.numeric(data.df[53,5])
),
stringsAsFactors = FALSE
)
table_training <- data.frame("Demographic_category"=c("Formal Training",
"No Training",
"Self-taught",
"Workshops and Bootcamps",
"Unknown Training"
),
"Demographic"= c("Bioinformatics Training",
"Bioinformatics Training",
"Bioinformatics Training",
"Bioinformatics Training",
"Bioinformatics Training"
),
"N"=c(as.numeric(data.df[39,3]),
as.numeric(data.df[40,3]),
as.numeric(data.df[41,3]),
as.numeric(data.df[42,3]),
as.numeric(data.df[43,3])
),
"Percentage"=c(as.numeric(data.df[39,5]),
as.numeric(data.df[40,5]),
as.numeric(data.df[41,5]),
as.numeric(data.df[42,5]),
as.numeric(data.df[43,5])
),
stringsAsFactors = FALSE
)
table_decade <- data.frame("Demographic_category"=c("Before 1970s",
"1970s",
"1980s",
"1990s",
"2000s",
"2010s",
"Unknown Decade"),
"Demographic"=c("Decade of Degree",
"Decade of Degree",
"Decade of Degree",
"Decade of Degree",
"Decade of Degree",
"Decade of Degree",
"Decade of Degree"),
"N"=c(as.numeric(data.df[59,3]),
as.numeric(data.df[54,3]),
as.numeric(data.df[55,3]),
as.numeric(data.df[56,3]),
as.numeric(data.df[57,3]),
as.numeric(data.df[58,3]),
as.numeric(data.df[60,3])
),
"Percentage"=c(as.numeric(data.df[59,5]),
as.numeric(data.df[54,5]),
as.numeric(data.df[55,5]),
as.numeric(data.df[56,5]),
as.numeric(data.df[57,5]),
as.numeric(data.df[58,5]),
as.numeric(data.df[60,5])
),
stringsAsFactors = FALSE
)
# combine tables
combined_tables <- rbind(table_sex,
table_ethnicity,
table_degree,
table_carnegie,
table_msi,
table_enrollment,
table_training,
table_decade)
# group by demographic and order and convert percentages to rounded figures
combined_tables <- combined_tables%>%
arrange(Demographic, desc(Percentage))%>%
mutate(Percentage = round(Percentage*100))
# order for plotting
combined_tables$Demographic_category <- factor(combined_tables$Demographic_category,
levels = combined_tables$Demographic_category[order(combined_tables$Percentage)])
target_order <- c(
"Race/Ethnicity",
"Race/Ethnicity",
"Race/Ethnicity",
"Race/Ethnicity",
"Race/Ethnicity",
"Race/Ethnicity",
"Race/Ethnicity",
"Sex",
"Sex",
"Sex",
"Terminal Degree",
"Terminal Degree",
"Terminal Degree",
"Terminal Degree",
"Terminal Degree",
"Terminal Degree",
"Bioinformatics Training",
"Bioinformatics Training",
"Bioinformatics Training",
"Bioinformatics Training",
"Bioinformatics Training",
"Decade of Degree",
"Decade of Degree",
"Decade of Degree",
"Decade of Degree",
"Decade of Degree",
"Decade of Degree",
"Decade of Degree",
"MSI Designation",
"MSI Designation",
"MSI Designation",
"Carnegie Classification",
"Carnegie Classification",
"Carnegie Classification",
"Carnegie Classification",
"Carnegie Classification",
"Undergraduate Enrollment",
"Undergraduate Enrollment",
"Undergraduate Enrollment",
"Undergraduate Enrollment"
)
#combined_tables$Demographic <- reorder.factor(combined_tables$Demographic, new.order =  target_order)
# additional reordering of subdemographics
target_order2 <- c("No Training",
"Self-taught",
"Workshops and Bootcamps",
"Formal Training",
"Unknown Training",
"Doctoral ",
"Master's ",
"Baccalaureate ",
"Associate's ",
"Unknown Classification ",
"2010s",
"2000s",
"1990s",
"1980s",
"1970s",
"Before 1970s",
"Unknown Decade",
"Minority-Serving",
"Nonâ€”minority-Serving",
"Unknown MSI Designation",
"Am. Indian/Alaskan Native",
"Asian",
"Black/African Am.",
"Hawaiian/Pacific Islander",
"Hispanic",
"White",
"Unknown Race/Ethnicity",
"Female",
"Male",
"Unknown Sex",
"Doctoral",
"Professional",
"Master's",
"Bachelor's",
"Other",
"Unknown Degree",
"> 15,000",
"5-15,000",
"< 5,000",
"Unknown Enrollment"
)
target_order2 <- rev(target_order2)
combined_tables$Demographic_category <- reorder.factor(combined_tables$Demographic_category, new.order = target_order2)
#Generate plot
greys <- c("#252525",
"#636363",
"#969696",
"#bdbdbd",
"#d9d9d9",
"#f7f7f7")
combined_tables%>%
ggplot(aes(Demographic_category, Percentage))+
geom_bar(stat = "Identity")+
coord_flip()+
facet_wrap(~Demographic, scales = "free_y", ncol = 2) +
theme_fivethirtyeight(base_size = 20, base_family = "sans")+
theme(panel.background = element_rect(fill = "white"))+
theme(plot.background = element_rect(fill = "white"))+
theme(legend.background = element_rect(fill = "white"))+
theme(strip.text.y = element_blank())+
#theme(strip.background = element_rect,strip.text.x = element_blank())+
theme(axis.text.x = element_blank())+
geom_text(aes(label = paste0(Percentage, "%"), y = Percentage),
vjust =0, nudge_y = 5, nudge_x = -.1, size = 5, color = "black") +
theme(axis.title.x=element_blank(),
axis.ticks.x=element_blank())+
theme(strip.text.x = element_text(size = 14, face = "bold", vjust = 10 ))+
theme( axis.line = element_line(colour = "black",
size = 0.5, linetype = "solid"))+
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank())+
theme(axis.line.x = element_blank())+
theme(axis.text.y = element_text(hjust = 1))
ggsave("figure_01.png",
units = "in",
height = 15,
width = 18)
combined_tables%>%
select(Demographic, Demographic_category, N, Percentage)%>%
stargazer(., type = "html",
summary = FALSE,
rownames = FALSE,
digits = 1,
title = "Summary Demographics",
out = "./summary_gemographics.html",
covariate.labels = c("Demographic", "Demographic Category", "n respondents", "Percentage of survey N"))
View(table_sex)
